generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// generator dbml {
//   provider = "prisma-dbml-generator"
// }

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Approval {
  idApproval Int        @id @default(autoincrement()) @map("id_approval")
  uniqueId   String     @unique @default(uuid()) @map("unique_id") @db.Uuid
  tableName  String     @map("table_name") @db.VarChar(20)
  tableId    Int        @map("table_id") @db.Integer
  name       String     @map("name") @db.VarChar(50)
  jabatan    String     @map("jabatan") @db.VarChar(50)
  unit       String     @map("unit") @db.VarChar(8)
  status     StatusEnum @default(PROGRESS) @map("status")
  remark     String?    @map("remark")
  createdAt  DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy  String     @map("created_by") @db.VarChar(50)
  updatedAt  DateTime?  @default(now()) @map("updated_at") @db.Timestamp(6)
  updatedBy  String?    @map("updated_by") @db.VarChar(50)
  noteMemo   NoteMemo[]
  //note_memo   note_memo[]

  @@index([tableName, tableId, createdBy], map: "approval_constraint")
  @@map("approval")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model NoteMemo {
  idNoteMemo   Int       @id @default(autoincrement()) @map("id_note_memo")
  uniqueId     String    @unique @map("unique_id") @db.Uuid
  idApproval   Int       @map("id_approval") @db.Integer
  years        Int       @map("years") @db.Integer
  dinas        String    @map("dinas") @db.VarChar(8)
  memoNumber   BigInt    @map("memo_number") @db.BigInt
  departmentTo String    @map("department_to") @db.VarChar(8)
  note         String    @map("note")
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy    String    @map("created_by") @db.VarChar(50)
  updatedAt    DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)
  updatedBy    String?   @map("updated_by") @db.VarChar(50)
  approval     Approval  @relation(fields: [idApproval], references: [idApproval], onDelete: NoAction, onUpdate: NoAction, map: "fk_approval_to_note_memo")

  @@map("note_memo")
}

model Budget {
  idBudget     Int         @id @default(autoincrement()) @map("id_budget")
  uniqueId     String      @unique @default(uuid()) @map("unique_id") @db.Uuid
  years        Int         @map("years") @db.Integer
  idGlAccount  Int         @map("id_gl_account") @db.Integer
  idCostCenter Int         @map("id_cost_center") @db.Integer
  total        Float       @map("total") @db.DoublePrecision
  value01      Float       @map("value01") @db.DoublePrecision
  value02      Float       @map("value02") @db.DoublePrecision
  value03      Float       @map("value03") @db.DoublePrecision
  value04      Float       @map("value04") @db.DoublePrecision
  value05      Float       @map("value05") @db.DoublePrecision
  value06      Float       @map("value06") @db.DoublePrecision
  value07      Float       @map("value07") @db.DoublePrecision
  value08      Float       @map("value08") @db.DoublePrecision
  value09      Float       @map("value09") @db.DoublePrecision
  value10      Float       @map("value10") @db.DoublePrecision
  value11      Float       @map("value11") @db.DoublePrecision
  value12      Float       @map("value12") @db.DoublePrecision
  value13      Float       @map("value13") @db.DoublePrecision
  value14      Float       @map("value14") @db.DoublePrecision
  value15      Float       @map("value15") @db.DoublePrecision
  value16      Float       @map("value16") @db.DoublePrecision
  createdAt    DateTime    @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy    String      @map("created_by") @db.VarChar(50)
  updatedAt    DateTime    @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy    String?     @map("updated_by") @db.VarChar(50)
  mCostCenter  MCostCenter @relation(fields: [idCostCenter], references: [idCostCenter], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_cost_center_to_budget")
  mGlAccount   MGlAccount  @relation(fields: [idGlAccount], references: [idGlAccount], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_gl_account_to_budget")

  //unique constraint composite unique key
  @@unique([years, idGlAccount, idCostCenter], map: "budget_constraint")
  @@map("budget")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model BudgetInvestation {
  idBudgetInvestation    Int                      @id @default(autoincrement()) @map("id_budget_investation")
  uniqueId               String                   @unique @map("unique_id") @db.Uuid
  years                  Int                      @map("years") @db.Integer
  investNumber           Int?                     @map("no_invest") @db.Integer
  idCostCenter           Int                      @map("id_cost_center") @db.Integer
  description            String?                  @map("description") @db.VarChar(255)
  type                   InvestTypeEnum?          @map("type")
  groupAsset             String?                  @map("group_asset") @db.VarChar(40)
  usefull                Int?                     @map("usefull") @db.SmallInt
  skala                  Int?                     @map("skala") @db.SmallInt
  groupInvest            String?                  @map("group_invest") @db.VarChar(40)
  category               String?                  @map("category") @db.VarChar(40)
  new                    Boolean?                 @map("new")
  total                  Float                    @map("total") @db.DoublePrecision
  plus                   Float                    @map("plus") @db.DoublePrecision
  minus                  Float                    @map("minus") @db.DoublePrecision
  createdAt              DateTime                 @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy              String                   @map("created_by") @db.VarChar(50)
  updatedAt              DateTime                 @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy              String?                  @map("updated_by") @db.VarChar(50)
  mCostCenter            MCostCenter              @relation(fields: [idCostCenter], references: [idCostCenter], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_cost_center_to_budget_investation")
  realizationInvestItem  RealizationInvestItem[]
  reallocationInvestItem ReallocationInvestItem[]

  @@unique([years, investNumber, idCostCenter], map: "budget_invest_constraint")
  @@map("budget_investation")
}

model BudgetReallocation {
  idBudget     Int         @id @default(autoincrement()) @map("id_budget")
  uniqueId     String      @unique @default(uuid()) @map("unique_id") @db.Uuid
  years        Int         @map("years") @db.Integer
  idCostCenter Int         @map("id_cost_center") @db.Integer
  idGlAccount  Int         @map("id_gl_account") @db.Integer
  plus         Float       @map("plus") @db.DoublePrecision
  minus        Float       @map("minus") @db.DoublePrecision
  createdAt    DateTime    @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy    String      @map("created_by") @db.VarChar(50)
  updatedAt    DateTime    @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy    String?     @map("updated_by") @db.VarChar(50)
  mCostCenter  MCostCenter @relation(fields: [idCostCenter], references: [idCostCenter], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_cost_center_to_budget_reallocation")
  mGlAccount   MGlAccount  @relation(fields: [idGlAccount], references: [idGlAccount], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_gl_account_to_budget_reallocation")

  @@unique([years, idCostCenter, idGlAccount], map: "budget_reallocation_constraint")
  @@map("budget_reallocation")
}

model FileUpload {
  idUpload      Int          @id @default(autoincrement()) @map("id_upload")
  uniqueId      String       @unique @default(uuid()) @map("unique_id") @db.Uuid
  tableName     String       @map("table_name") @db.VarChar(20)
  idTable       Int          @map("id_table") @db.Integer
  idDocCategory Int          @map("id_doc_category") @db.Integer
  docName       String       @map("doc_name") @db.VarChar(100)
  docLink       String       @map("doc_link") @db.VarChar(255)
  docSize       Float        @map("doc_size")
  docType       String       @map("doc_type") @db.VarChar(5)
  createdAt     DateTime     @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy     String       @map("created_by") @db.VarChar(50)
  updatedAt     DateTime     @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy     String?      @map("updated_by") @db.VarChar(50)
  mDocCategory  MDocCategory @relation(fields: [idDocCategory], references: [idDocCategory], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_doc_category_to_file_upload")

  @@unique([tableName, idTable, idDocCategory, docName], map: "file_upload_constraint")
  @@map("file_upload")
}

model MDocCategory {
  idDocCategory Int          @id @default(autoincrement()) @map("id_doc_category")
  uniqueId      String       @unique @default(uuid()) @map("unique_id") @db.Uuid
  module        ModulEnum    @default(OPEX) @map("module")
  docCategory   String       @map("doc_category") @db.VarChar(20)
  description   String       @map("description") @db.VarChar(100)
  createdAt     DateTime?    @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy     String       @map("created_by") @db.VarChar(50)
  updatedAt     DateTime     @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy     String?      @map("updated_by") @db.VarChar(50)
  fileUpload    FileUpload[]

  @@unique([module, docCategory], map: "doc_category_constraint")
  @@map("m_doc_category")
}

model MCostCenter {
  idCostCenter                                                                       Int                      @id @default(autoincrement()) @map("id_cost_center")
  uniqueId                                                                           String                   @unique @default(uuid()) @map("unique_id") @db.Uuid
  costCenter                                                                         String                   @unique(map: "cost_center_idx") @db.VarChar(20)
  description                                                                        String                   @map("description") @db.VarChar(50)
  bidang                                                                             String                   @map("bidang") @db.VarChar(8)
  dinas                                                                              String                   @map("dinas") @db.VarChar(8)
  directorat                                                                         String                   @map("directorat") @db.VarChar(8)
  groupDinas                                                                         String                   @map("group_dinas") @db.VarChar(20)
  profitCenter                                                                       String                   @map("profit_center") @db.VarChar(20)
  active                                                                             Boolean                  @map("active")
  createdAt                                                                          DateTime                 @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy                                                                          String                   @map("created_by") @db.VarChar(50)
  updatedAt                                                                          DateTime                 @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy                                                                          String?                  @map("updated_by") @db.VarChar(50)
  budget                                                                             Budget[]
  budgetInvestation                                                                  BudgetInvestation[]
  budgetReallocation                                                                 BudgetReallocation[]
  realization                                                                        Realization[]
  reallocation_budget_item_reallocation_budget_item_id_cost_centerTom_cost_center    ReallocationBudgetItem[] @relation("reallocation_budget_item_id_cost_centerTom_cost_center")
  reallocation_budget_item_reallocation_budget_item_id_cost_center_toTom_cost_center ReallocationBudgetItem[] @relation("reallocation_budget_item_id_cost_center_toTom_cost_center")

  @@map("m_cost_center")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments

model MGlAccount {
  idGlAccount                                                                      Int                      @id @default(autoincrement()) @map("id_gl_account")
  uniqueId                                                                         String                   @unique @default(uuid()) @map("unique_id") @db.Uuid
  glAccount                                                                        Decimal                  @unique(map: "gl_account_idx") @db.Decimal
  description                                                                      String                   @map("description") @db.VarChar(50)
  groupDetail                                                                      String                   @map("group_detail") @db.VarChar(50)
  groupGl                                                                          String                   @map("group_gl") @db.VarChar(20)
  sap                                                                              Boolean                  @map("sap")
  active                                                                           Boolean                  @map("active")
  createdAt                                                                        DateTime                 @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy                                                                        String                   @map("created_by") @db.VarChar(50)
  updatedAt                                                                        DateTime                 @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy                                                                        String?                  @map("updated_by") @db.VarChar(50)
  budget                                                                           Budget[]
  budgetReallocation                                                               BudgetReallocation[]
  realizationItem                                                                  RalizationItem[]
  reallocation_budget_item_reallocation_budget_item_id_gl_accountTom_gl_account    ReallocationBudgetItem[] @relation("reallocation_budget_item_id_gl_accountTom_gl_account")
  reallocation_budget_item_reallocation_budget_item_id_gl_account_toTom_gl_account ReallocationBudgetItem[] @relation("reallocation_budget_item_id_gl_account_toTom_gl_account")
  reallocation_item                                                                ReallocationItem[]

  @@map("m_gl_account")
}

model MKurs {
  idKurs    Int      @id @default(autoincrement()) @map("id_kurs")
  uniqueId  String   @unique @default(uuid()) @map("unique_id") @db.VarChar(36)
  years     Int      @unique(map: "years_idx") @db.Integer
  value     Float    @map("value") @db.DoublePrecision
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy String   @map("created_by") @db.VarChar(50)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy String?  @map("updated_by") @db.VarChar(50)

  @@map("m_kurs")
}

model MStatus {
  idStatus           Int                  @id @default(autoincrement()) @map("id_status")
  uniqueId           String               @unique @default(uuid()) @map("unique_id") @db.Uuid
  createdAt          DateTime             @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy          String               @map("created_by") @db.VarChar(50)
  updatedAt          DateTime             @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy          String?              @map("updated_by") @db.VarChar(50)
  status             String?              @map("status") @db.VarChar(25)
  realization        Realization[]
  realizationInvest  RealizationInvest[]
  reallocation       Reallocation[]
  reallocationBudget ReallocationBudget[]
  reallocationInvest ReallocationInvest[]

  @@map("m_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Realization {
  idRealization    Int                 @id @default(autoincrement()) @map("id_realization")
  uniqueId         String              @unique @default(uuid()) @map("unique_id") @db.Uuid
  years            Int                 @map("years") @db.Integer
  month            Int                 @map("month") @db.Integer
  idCostCenter     Int                 @map("id_cost_center") @db.Integer
  draftNumber      Int                 @map("no_draft") @db.Integer
  requestNumber    Int?                @map("no_request") @db.Integer
  taReff           Int?                @map("ta_reff") @db.Integer
  type             RealizationTypeEnum @default(UANG) @map("type")
  responsibleNopeg String              @map("responsible_nopeg") @db.VarChar(8)
  titleRequest     String              @map("title_request")
  noteRequest      String              @map("note_request")
  status           StatusEnum          @default(PROGRESS) @map("status")
  idStatus         Int                 @map("id_status") @db.Integer
  department       String              @map("department") @db.VarChar(8)
  personalNumber   String              @map("nopeg") @db.VarChar(8)
  departmentTo     String              @map("department_to") @db.VarChar(8)
  personalNumberTo String              @map("nopeg_to") @db.VarChar(8)
  createdAt        DateTime            @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy        String              @map("created_by") @db.VarChar(50)
  updatedAt        DateTime            @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy        String?             @map("updated_by") @db.VarChar(50)
  mCostCenter      MCostCenter         @relation(fields: [idCostCenter], references: [idCostCenter], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_cost_center_to_realization")
  mStatus          MStatus             @relation(fields: [idStatus], references: [idStatus], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_status_to_realization")
  realizationItem  RalizationItem[]
  reallocation     Reallocation[]

  @@index([years, idCostCenter], map: "realization_constraint")
  @@map("realization")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RealizationInvest {
  idRealizationInvest   Int                     @id @default(autoincrement()) @map("id_realization_invest")
  uniqueId              String                  @unique @default(uuid()) @map("unique_id") @db.Uuid
  years                 Int                     @map("years") @db.Integer
  draftNumber           Int                     @map("no_draft") @db.Integer
  requestNumber         Int?                    @map("no_request") @db.Integer
  idTypeInvest          Int                     @map("id_type_invest") @db.Integer
  cba                   Boolean?                @map("cba")
  responsibleNopeg      String                  @map("responsible_nopeg") @db.VarChar(8)
  description           String?                 @map("description")
  io                    Decimal?                @map("io") @db.Decimal(12, 0)
  status                StatusEnum              @default(PROGRESS) @map("status")
  idStatus              Int                     @map("id_status") @db.Integer
  department            String                  @map("department") @db.VarChar(8)
  personalNumber        String                  @map("nopeg") @db.VarChar(8)
  departmentTo          String                  @map("department_to") @db.VarChar(8)
  personalNumberTo      String                  @map("nopeg_to") @db.VarChar(8)
  createdAt             DateTime                @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy             String                  @map("created_by") @db.VarChar(50)
  updatedAt             DateTime                @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy             String?                 @map("updated_by") @db.VarChar(50)
  mStatus               MStatus                 @relation(fields: [idStatus], references: [idStatus], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_status_to_realization_invest")
  mTypeInvest           MTypeInvest             @relation(fields: [idTypeInvest], references: [idTypeInvest], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_type_invest_to_realization_invest")
  realizationInvestItem RealizationInvestItem[]

  @@index([years], map: "realization_invest_constraint")
  @@map("realization_invest")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model MTypeInvest {
  idTypeInvest      Int                 @id @default(autoincrement()) @map("id_type_invest")
  uniqueId          String              @unique @default(uuid()) @map("unique_id") @db.Uuid
  type              String              @unique(map: "type_invest_idx") @db.VarChar(1)
  name              String?             @map("name") @db.VarChar(12)
  createdAt         DateTime            @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy         String              @map("created_by") @db.VarChar(50)
  updatedAt         DateTime            @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy         String?             @map("updated_by") @db.VarChar(50)
  realizationInvest RealizationInvest[]

  @@map("m_type_invest")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RealizationInvestItem {
  idRealizationInvestItem Int                      @id @default(autoincrement()) @map("id_realization_invest_item")
  uniqueId                String                   @unique @default(uuid()) @map("unique_id") @db.Uuid
  idRealizationInvest     Int                      @map("id_realization_invest") @db.Integer
  idBudgetInvestation     Int                      @map("id_budget_investation") @db.Integer
  amount                  Float?                   @map("amount") @db.DoublePrecision
  amountSubmission        Float                    @map("amount_submission") @db.DoublePrecision
  internal                Boolean?                 @map("internal")
  note                    String?                  @map("note")
  createdAt               DateTime                 @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy               String                   @map("created_by") @db.VarChar(50)
  updatedAt               DateTime                 @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy               String?                  @map("updated_by") @db.VarChar(50)
  budgetInvestation       BudgetInvestation        @relation(fields: [idRealizationInvest], references: [idBudgetInvestation], onDelete: NoAction, onUpdate: NoAction, map: "fk_budget_investation_to_realization_invest_item")
  realizationInvest       RealizationInvest        @relation(fields: [idBudgetInvestation], references: [idRealizationInvest], onDelete: NoAction, onUpdate: NoAction, map: "fk_realization_invest_to_realization_invest_item")
  reallocationInvestItem  ReallocationInvestItem[]

  @@map("realization_invest_item")
}

model RalizationItem {
  idRealizationItem Int                @id @default(autoincrement()) @map("id_realization_item")
  uniqueId          String             @unique @default(uuid()) @map("unique_id") @db.Uuid
  idRealization     Int                @map("id_realization") @db.Integer
  idGlAccount       Int                @map("id_gl_account") @db.Integer
  amount            Float              @map("amount") @db.DoublePrecision
  amountSubmission  Float              @map("amount_submission") @db.DoublePrecision
  amountHps         Float              @map("amount_hps") @db.DoublePrecision
  amountCorrection  Float              @map("amount_correction") @db.DoublePrecision
  periodStart       DateTime           @map("period_start") @db.Date
  periodFinish      DateTime           @map("period_finish") @db.Date
  descPby           String             @map("desc_pby")
  remarkPby         String             @map("remark_pby")
  memo              String             @map("memo")
  createdAt         DateTime           @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy         String             @map("created_by") @db.VarChar(50)
  updatedAt         DateTime           @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy         String?            @map("updated_by") @db.VarChar(50)
  mGlAccount        MGlAccount         @relation(fields: [idGlAccount], references: [idGlAccount], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_gl_account_to_realization_item")
  realization       Realization        @relation(fields: [idRealization], references: [idRealization], onDelete: NoAction, onUpdate: NoAction, map: "fk_realization_to_realization_item")
  reallocationItem  ReallocationItem[]

  @@unique([idRealization, idGlAccount], map: "realization_item_constraint")
  @@map("realization_item")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Reallocation {
  idReallocation   Int                @id @default(autoincrement()) @map("id_reallocation")
  uniqueId         String             @unique @default(uuid()) @map("unique_id") @db.Uuid
  realizationId    Int                @map("realization_id") @db.Integer
  type             String             @map("type") @db.VarChar(30)
  taReff           Int                @map("ta_reff") @db.Integer
  ownerBudget      String             @map("owner_budget") @db.VarChar(8)
  status           StatusEnum         @default(PROGRESS) @map("status")
  idStatus         Int                @map("id_status") @db.Integer
  department       String             @map("department") @db.VarChar(8)
  personalNumber   String             @map("nopeg") @db.VarChar(8)
  departmentTo     String             @map("department_to") @db.VarChar(8)
  personalNumberTo String             @map("nopeg_to") @db.VarChar(8)
  createdAt        DateTime           @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy        String             @map("created_by") @db.VarChar(50)
  updatedAt        DateTime           @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy        String?            @map("updated_by") @db.VarChar(50)
  mStatus          MStatus            @relation(fields: [idStatus], references: [idStatus], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_status_to_reallocation")
  realization      Realization        @relation(fields: [realizationId], references: [idRealization], onDelete: NoAction, onUpdate: NoAction, map: "fk_realization_to_reallocation")
  reallocationItem ReallocationItem[]

  @@map("reallocation")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ReallocationBudget {
  idReallocationBudget   Int                      @id @default(autoincrement()) @map("id_reallocation_budget")
  uniqueId               String                   @unique @default(uuid()) @map("unique_id") @db.Uuid
  years                  Int                      @map("years") @db.Integer
  taReff                 Int                      @map("ta_reff") @db.Integer
  idStatus               Int                      @map("id_status") @db.Integer
  status                 StatusEnum               @default(PROGRESS) @map("status")
  department             String                   @map("department") @db.VarChar(8)
  personalNumber         String                   @map("nopeg") @db.VarChar(8)
  departmentTo           String                   @map("department_to") @db.VarChar(8)
  personalNumberTo       String                   @map("nopeg_to") @db.VarChar(8)
  createdAt              DateTime                 @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy              String                   @map("created_by") @db.VarChar(50)
  updatedAt              DateTime                 @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy              String?                  @map("updated_by") @db.VarChar(50)
  mStatus                MStatus                  @relation(fields: [idStatus], references: [idStatus], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_status_to_reallocation_budget")
  reallocationBudgetItem ReallocationBudgetItem[]

  @@index([years], map: "reallocation_budget_constraint")
  @@map("reallocation_budget")
}

model ReallocationBudgetItem {
  idReallocationBudgetItem                                                Int                @id @default(autoincrement()) @map("id_reallocation_budget_item")
  uniqueId                                                                String             @unique @map("unique_id") @db.Uuid
  idReallocationBudget                                                    Int                @map("id_reallocation_budget") @db.Integer
  idCostCenter                                                            Int                @map("id_cost_center") @db.Integer
  idGlAccount                                                             Int                @map("id_gl_account") @db.Integer
  idCostCenterTo                                                          Int                @map("id_cost_center_to") @db.Integer
  idGlAccountTo                                                           Int                @map("id_gl_account_to") @db.Integer
  amount                                                                  Float?             @map("amount") @db.DoublePrecision
  createdAt                                                               DateTime           @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy                                                               String             @map("created_by") @db.VarChar(50)
  updatedAt                                                               DateTime           @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy                                                               String?            @map("updated_by") @db.VarChar(50)
  m_cost_center_reallocation_budget_item_id_cost_centerTom_cost_center    MCostCenter        @relation("reallocation_budget_item_id_cost_centerTom_cost_center", fields: [idCostCenter], references: [idCostCenter], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_cost_center_to_reallocation_budget_item")
  m_cost_center_reallocation_budget_item_id_cost_center_toTom_cost_center MCostCenter        @relation("reallocation_budget_item_id_cost_center_toTom_cost_center", fields: [idCostCenterTo], references: [idCostCenter], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_cost_center_to_reallocation_budget_item1")
  m_gl_account_reallocation_budget_item_id_gl_accountTom_gl_account       MGlAccount         @relation("reallocation_budget_item_id_gl_accountTom_gl_account", fields: [idGlAccount], references: [idGlAccount], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_gl_account_to_reallocation_budget_item")
  m_gl_account_reallocation_budget_item_id_gl_account_toTom_gl_account    MGlAccount         @relation("reallocation_budget_item_id_gl_account_toTom_gl_account", fields: [idGlAccountTo], references: [idGlAccount], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_gl_account_to_reallocation_budget_item1")
  reallocation_budget                                                     ReallocationBudget @relation(fields: [idReallocationBudget], references: [idReallocationBudget], onDelete: NoAction, onUpdate: NoAction, map: "fk_reallocation_budget_to_reallocation_budget_item")

  @@map("reallocation_budget_item")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ReallocationInvest {
  idReallocationInvest   Int                      @id @default(autoincrement()) @map("id_reallocation_invest")
  uniqueId               String                   @unique @map("unique_id") @db.Uuid
  type                   String                   @map("type") @db.VarChar(30)
  ba                     Int                      @map("ba") @db.Integer
  status                 StatusEnum               @default(PROGRESS) @map("status")
  idStatus               Int                      @map("id_status") @db.Integer
  department             String                   @map("department") @db.VarChar(8)
  personalNumber         String                   @map("nopeg") @db.VarChar(8)
  departmentTo           String                   @map("department_to") @db.VarChar(8)
  personalNumberTo       String                   @map("nopeg_to") @db.VarChar(8)
  createdAt              DateTime                 @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy              String                   @map("created_by") @db.VarChar(50)
  updatedAt              DateTime                 @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy              String?                  @map("updated_by") @db.VarChar(50)
  mStatus                MStatus                  @relation(fields: [idStatus], references: [idStatus], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_status_to_reallocation_invest")
  reallocationInvestItem ReallocationInvestItem[]

  @@map("reallocation_invest")
}

model ReallocationInvestItem {
  idReallocationInvestItem Int                   @id @default(autoincrement()) @map("id_reallocation_invest_item")
  uniqueId                 String                @unique @map("unique_id") @db.Uuid
  idReallocationInvest     Int                   @map("id_reallocation_invest") @db.Integer
  idBudgetInvestation      Int                   @map("id_budget_investation") @db.Integer
  idRealizationInvestItem  Int                   @map("id_realization_invest_item") @db.Integer
  amount                   Float                 @map("amount") @db.DoublePrecision
  description              String?               @map("description") @db.VarChar(255)
  note                     String?               @map("note")
  remark                   String                @map("remark")
  createdAt                DateTime              @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy                String                @map("created_by") @db.VarChar(50)
  updatedAt                DateTime              @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy                String?               @map("updated_by") @db.VarChar(50)
  budgetInvestation        BudgetInvestation     @relation(fields: [idBudgetInvestation], references: [idBudgetInvestation], onDelete: NoAction, onUpdate: NoAction, map: "fk_budget_investation_to_reallocation_invest_item")
  realizationInvestItem    RealizationInvestItem @relation(fields: [idRealizationInvestItem], references: [idRealizationInvestItem], onDelete: NoAction, onUpdate: NoAction, map: "fk_realization_invest_item_to_reallocation_invest_item")
  reallocationInvest       ReallocationInvest    @relation(fields: [idReallocationInvest], references: [idReallocationInvest], onDelete: NoAction, onUpdate: NoAction, map: "fk_reallocation_invest_to_reallocation_invest_item")

  @@map("reallocation_invest_item")
}

model ReallocationItem {
  idReallocationItem Int            @id @default(autoincrement()) @map("id_reallocation_item")
  uniqueId           String         @unique @map("unique_id") @db.Uuid
  idReallocation     Int            @map("id_reallocation") @db.Integer
  idGlAccount        Int            @map("id_gl_account") @db.Integer
  idRealizazionItem  Int            @map("id_realizazion_item") @db.Integer
  amount             Float          @map("amount") @db.DoublePrecision
  budgetName         String         @map("budget_name") @db.VarChar(50)
  remark             String         @map("remark")
  createdAt          DateTime       @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy          String         @map("created_by") @db.VarChar(50)
  updatedAt          DateTime       @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy          String?        @map("updated_by") @db.VarChar(50)
  mGlAccount         MGlAccount     @relation(fields: [idGlAccount], references: [idGlAccount], onDelete: NoAction, onUpdate: NoAction, map: "fk_m_gl_account_to_reallocation_item")
  realizationItem    RalizationItem @relation(fields: [idRealizazionItem], references: [idRealizationItem], onDelete: NoAction, onUpdate: NoAction, map: "fk_realization_item_to_reallocation_item")
  reallocation       Reallocation   @relation(fields: [idReallocation], references: [idReallocation], onDelete: NoAction, onUpdate: NoAction, map: "fk_reallocation_to_reallocation_item")

  @@map("reallocation_item")
}

model Simulation {
  idSimulation     Int      @id @default(autoincrement()) @map("id_simulation")
  uniqueId         String   @default(uuid()) @map("unique_id") @db.Uuid
  years            Int      @map("years") @db.Integer
  simulationBudget Float?   @map("simulation_budget") @db.Real
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy        String   @map("created_by") @db.VarChar(50)
  updatedAt        DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updatedBy        String?  @map("updated_by") @db.VarChar(50)

  @@map("simulation")
}

enum InvestTypeEnum {
  FS
  CBA
}

enum ModulEnum {
  OPEX
  CAPEX
}

enum RealizationTypeEnum {
  UANG
  ENTERTAINMENT
  PENGADAAN
}

enum StatusEnum {
  PROGRESS
  REVISE
  REJECT
  CLOSE
}
